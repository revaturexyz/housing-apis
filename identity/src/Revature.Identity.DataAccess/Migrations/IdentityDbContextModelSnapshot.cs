// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Revature.Identity.DataAccess;

namespace Revature.Identity.DataAccess.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    partial class IdentityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Revature.Identity.DataAccess.Entities.CoordinatorAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("TrainingCenterAddress")
                        .HasColumnType("text");

                    b.Property<string>("TrainingCenterName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CoordinatorAccount");
                });

            modelBuilder.Entity("Revature.Identity.DataAccess.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CoordinatorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("uuid");

                    b.Property<string>("StatusText")
                        .HasColumnType("text");

                    b.Property<Guid?>("UpdateActionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CoordinatorId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("UpdateActionId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Revature.Identity.DataAccess.Entities.ProviderAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AccountCreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("AccountExpiresAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CoordinatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("StatusText")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CoordinatorId");

                    b.ToTable("ProviderAccount");
                });

            modelBuilder.Entity("Revature.Identity.DataAccess.Entities.TenantAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TenantAccount");
                });

            modelBuilder.Entity("Revature.Identity.DataAccess.Entities.UpdateAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("SerializedTarget")
                        .HasColumnType("text");

                    b.Property<string>("UpdateType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UpdateAction");
                });

            modelBuilder.Entity("Revature.Identity.DataAccess.Entities.Notification", b =>
                {
                    b.HasOne("Revature.Identity.DataAccess.Entities.CoordinatorAccount", "Coordinator")
                        .WithMany("Notifications")
                        .HasForeignKey("CoordinatorId");

                    b.HasOne("Revature.Identity.DataAccess.Entities.ProviderAccount", "Provider")
                        .WithMany("Notifications")
                        .HasForeignKey("ProviderId");

                    b.HasOne("Revature.Identity.DataAccess.Entities.UpdateAction", "UpdateAction")
                        .WithMany("Notifications")
                        .HasForeignKey("UpdateActionId");
                });

            modelBuilder.Entity("Revature.Identity.DataAccess.Entities.ProviderAccount", b =>
                {
                    b.HasOne("Revature.Identity.DataAccess.Entities.CoordinatorAccount", "Coordinator")
                        .WithMany("Providers")
                        .HasForeignKey("CoordinatorId");
                });
#pragma warning restore 612, 618
        }
    }
}
