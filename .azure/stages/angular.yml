# angular :: azure-devops

# required variables:
# id, directory, sonarcloud-login

parameters:
  id: ''

stages:
- stage: build
  displayName: build
  jobs:
  - job: build_angular
    displayName: build::angular
    pool:
      vmImage: ubuntu-18.04
    steps:
    - task: UseNode@1
      inputs:
        version: '12.13'
      displayName: node
    - script: npm clean-install
      displayName: npm install
      workingDirectory: $(directory)
    - script: npm run lint
      displayName: npm lint
      workingDirectory: $(directory)
    - script: npm run build
      displayName: npm build
      workingDirectory: $(directory)
    - script: npm test
      displayName: npm test
      workingDirectory: $(directory)
    - script: npm run inspect --
        -Dsonar.pullrequest.base=$SYSTEM_PULLREQUEST_TARGETBRANCH
        -Dsonar.pullrequest.branch=$SYSTEM_PULLREQUEST_SOURCEBRANCH
        -Dsonar.pullrequest.github.repository=$BUILD_REPOSITORY_NAME
        -Dsonar.pullrequest.key=$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER
        -Dsonar.pullrequest.provider=$BUILD_REPOSITORY_PROVIDER
      displayName: npm inspect::pull-request
      condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
      workingDirectory: $(directory)
      env:
        SONAR_LOGIN: $(sonarcloud-login)
    - script: npm run inspect -- -Dsonar.branch.name=$BUILD_SOURCEBRANCHNAME
      displayName: npm inspect::branch
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      workingDirectory: $(directory)
      env:
        SONAR_LOGIN: $(sonarcloud-login)

- stage: pack
  displayName: pack
  dependsOn: build
  condition: and(succeeded('build'), or(
    eq(variables['Build.SourceBranch'], 'refs/heads/master'),
    startsWith(variables['Build.SourceBranch'], 'refs/tags')))
  jobs:
  - job: pack_angular
    displayName: pack::angular
    pool:
      vmImage: ubuntu-18.04
    steps:
    - task: DownloadSecureFile@1
      displayName: angular environment::dev
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      inputs:
        secureFile: angular.${{ parameters.id }}.dev.ts
      name: ngenvdev
    - task: DownloadSecureFile@1
      displayName: angular environment::stg
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
      inputs:
        secureFile: angular.${{ parameters.id }}.stg.ts
      name: ngenvstg
    - task: Docker@2
      displayName: docker login
      inputs:
        command: login
        containerRegistry: revaturexyz-docker-2
    - script: |
        set -e
        cd $(directory)
        cp $(ngenvdev.secureFilePath) src/environments/environment.dev.ts
        docker image build --build-arg ANGULAR_CONFIGURATION=dev -f .docker/dockerfile -t $(directory) .
        docker image tag $(directory) revaturexyz/$(directory):dev
        docker image push revaturexyz/$(directory):dev
      displayName: docker push::dev
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    - script: |
        set -e
        cd $(directory)
        cp $(ngenvstg.secureFilePath) src/environments/environment.stg.ts
        docker image build --build-arg ANGULAR_CONFIGURATION=stg -f .docker/dockerfile -t $(directory) .
        docker image tag $(directory) revaturexyz/$(directory):stg
        docker image push revaturexyz/$(directory):stg
      displayName: docker push::stg
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
    - task: Docker@2
      displayName: docker logout
      inputs:
        command: logout
        containerRegistry: revaturexyz-docker-2
